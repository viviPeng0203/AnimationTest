{"version":3,"sources":["content/js/plugins-min.js"],"names":["method","noop","methods","length","console","window","ratio","screen","width","viewport","document","querySelector","setAttribute","$","pluginName","defaults","fixedContentPos","fixedBgPos","showCloseBtn","removalDelay","mainClass","callbacks","beforeOpen","this","startWindowScroll","scrollTop","open","height","on","e","preventDefault","setTimeout","magnificPopup","instance","content","find","each","i","el","SimpleBar","autoHide","beforeClose","data","clickAnchors","showAll","removeClass","close","off","change","addClass","Plugin","element","options","$element","extend","_defaults","_name","init","prototype","magnificPopupExtend","index","fn","methodOrOptions","jQuery","plugin","apply","Array","slice","call","arguments","error"],"mappings":"AAAA,cAGA,WASE,IARA,IAAIA,EAEAC,EAAO,aAEPC,EAAU,CAAC,SAAU,QAAS,QAAS,QAAS,MAAO,SAAU,QAAS,YAAa,QAAS,iBAAkB,WAAY,OAAQ,MAAO,eAAgB,UAAW,aAAc,QAAS,OAAQ,UAAW,WAAY,cAAe,YAAa,QAAS,QACnQC,EAASD,EAAQC,OACjBC,EAAUC,OAAOD,QAAUC,OAAOD,SAAW,GAE1CD,KAGAC,EAFLJ,EAASE,EAAQC,MAGfC,EAAQJ,GAAUC,GAbxB,GAmBA,WACE,IACIK,EADcC,OAAOC,MAOxB,IALGC,EAAWC,SAASC,cAAc,yBAElCL,EAAQ,GACVG,EAASG,aAAa,UAAW,qCAAuCN,EAAQ,mBAAqBA,EAAQ,mBAAqBA,EAAQ,uBAN9I,GAWA,SAAWO,GAGT,IAAIC,EAAa,sBACbC,EAAW,CACbC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,aAAc,IACdC,UAAW,WACXC,UAAW,CACTC,WAAY,WACVC,KAAKC,kBAAoBX,EAAER,QAAQoB,aAErCC,KAAM,WACAb,EAAE,gBAAgBc,SAAWd,EAAER,QAAQsB,UACzCd,EAAE,QAAQe,GAAG,YAAa,SAAUC,GAClCA,EAAEC,mBAINC,WAAW,WACOlB,EAAEmB,cAAcC,SAASC,QAAQC,KAAK,oBAC5CC,KAAK,SAAUC,EAAGC,GAC1B,IAAIC,UAAUD,EAAI,CAChBE,UAAU,OAGb,KAELC,YAAa,WACuB,SAA9BlB,KAAKW,QAAQQ,KAAK,UACpBC,aAAaC,UAGfrB,KAAKW,QAAQW,YAAY,cAE3BC,MAAO,WACLjC,EAAER,QAAQoB,UAAUF,KAAKC,mBACzBX,EAAE,QAAQkC,IAAI,cAEhBC,OAAQ,WACNzB,KAAKW,QAAQe,SAAS,gBAK5B,SAASC,EAAOC,EAASC,GACvB7B,KAAK4B,QAAUA,EACf5B,KAAK8B,SAAWxC,EAAEsC,GAClB5B,KAAK6B,QAAUvC,EAAEyC,QAAO,EAAM,GAAIvC,EAAUqC,EAAS7B,KAAK8B,SAASX,eAC5DnB,KAAK6B,QAAQtC,GACpBS,KAAKgC,UAAYxC,EACjBQ,KAAKiC,MAAQ1C,EACbS,KAAKkC,OACLlC,KAAK8B,SAASX,KAAK,UAAY5B,EAAYS,MAG7CV,EAAEyC,OAAOJ,EAAOQ,UAAW,CACzBD,KAAM,WACJlC,KAAK8B,SAASrB,cAAcT,KAAK6B,YAGrCvC,EAAE8C,oBAAsB,CACtBjC,KAAM,SAAc0B,EAASQ,GACtB/C,EAAEmB,gBAIPoB,EAAUvC,EAAEyC,QAAO,EAAM,GAAIvC,EAAUqC,GACvCvC,EAAEmB,cAAcN,KAAK0B,EAASQ,MAIlC/C,EAAEgD,GAAG/C,GAAc,SAAUgD,GAC3B,OAAOvC,KAAKa,KAAK,WACf,GAAK2B,SAAS/B,cAAd,CAKA,IAAIgC,EAASnD,EAAE6B,KAAKnB,KAAM,UAAYT,IAAe,IAAIoC,EAAO3B,KAAMuC,GAEvC,iBAApBA,GAAgCE,EAAOF,IAChDE,EAAOF,GAAiBG,MAAMD,EAAQE,MAAMR,UAAUS,MAAMC,KAAKC,UAAW,SAP5EjE,QAAQkE,MAAM,yDAYpBzD,EAAE,uBAAuB8C,sBAzF3B,CA0FGI","file":"plugins-min.js","sourcesContent":["\"use strict\";\n\n// Avoid `console` errors in browsers that lack a console.\n(function () {\n  var method;\n\n  var noop = function noop() {};\n\n  var methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'];\n  var length = methods.length;\n  var console = window.console = window.console || {};\n\n  while (length--) {\n    method = methods[length]; // Only stub undefined methods.\n\n    if (!console[method]) {\n      console[method] = noop;\n    }\n  }\n})(); // Place any jQuery/helper plugins in here.\n\n\n(function (targetWidth) {\n  var deviceWidth = screen.width;\n  var ratio = deviceWidth / targetWidth;\n  var viewport = document.querySelector('meta[name=\"viewport\"]');\n\n  if (ratio < 1) {\n    viewport.setAttribute('content', 'width=device-width, initial-scale=' + ratio + ', minimum-scale=' + ratio + ', maximum-scale=' + ratio + ', user-scalable=yes');\n  }\n})(360); // magnificPopup Extend\n\n\n(function ($, undefined) {\n  'use strict';\n\n  var pluginName = 'magnificPopupExtend';\n  var defaults = {\n    fixedContentPos: true,\n    fixedBgPos: true,\n    showCloseBtn: false,\n    removalDelay: 300,\n    mainClass: 'mfp-fade',\n    callbacks: {\n      beforeOpen: function beforeOpen() {\n        this.startWindowScroll = $(window).scrollTop();\n      },\n      open: function open() {\n        if ($('.mfp-content').height() < $(window).height()) {\n          $('body').on('touchmove', function (e) {\n            e.preventDefault();\n          });\n        }\n\n        setTimeout(function () {\n          var $scroller = $.magnificPopup.instance.content.find('[data-scrollbar]');\n          $scroller.each(function (i, el) {\n            new SimpleBar(el, {\n              autoHide: false\n            });\n          });\n        }, 10);\n      },\n      beforeClose: function beforeClose() {\n        if (this.content.data('popup') == 'index') {\n          clickAnchors.showAll();\n        }\n\n        this.content.removeClass('is-active');\n      },\n      close: function close() {\n        $(window).scrollTop(this.startWindowScroll);\n        $('body').off('touchmove');\n      },\n      change: function change() {\n        this.content.addClass('is-active');\n      }\n    }\n  };\n\n  function Plugin(element, options) {\n    this.element = element;\n    this.$element = $(element);\n    this.options = $.extend(true, {}, defaults, options, this.$element.data());\n    delete this.options[pluginName];\n    this._defaults = defaults;\n    this._name = pluginName;\n    this.init();\n    this.$element.data('plugin_' + pluginName, this);\n  }\n\n  $.extend(Plugin.prototype, {\n    init: function init() {\n      this.$element.magnificPopup(this.options);\n    }\n  });\n  $.magnificPopupExtend = {\n    open: function open(options, index) {\n      if (!$.magnificPopup) {\n        return;\n      }\n\n      options = $.extend(true, {}, defaults, options);\n      $.magnificPopup.open(options, index);\n    }\n  };\n\n  $.fn[pluginName] = function (methodOrOptions) {\n    return this.each(function () {\n      if (!jQuery().magnificPopup) {\n        console.error('jQuery plugin \"magnificPopup\" has not been loaded.');\n        return;\n      }\n\n      var plugin = $.data(this, 'plugin_' + pluginName) || new Plugin(this, methodOrOptions);\n\n      if (typeof methodOrOptions === 'string' && plugin[methodOrOptions]) {\n        plugin[methodOrOptions].apply(plugin, Array.prototype.slice.call(arguments, 1));\n      }\n    });\n  };\n\n  $('[data-popup=\"true\"]').magnificPopupExtend();\n})(jQuery);"]}